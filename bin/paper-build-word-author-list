#!/usr/bin/env python
# Produce a Latex title block from paper metadata
# in the following format:
# \title{The Zebra Nappe: a structurally displaced Ediacaran
#        passive margin in the southern Naukluft Mountains, Namibia}
# %running head: Crystal Knob xenoliths
# \author[1]{Daven P. Quinn}
# \author[1]{J.P. Grotzinger}
# \author[1]{T.M. Present}

# \affil[1]{Division of Geological and Planetary Sciences,
#   California Institute of Technology,
#   Pasadena, California, USA}

import sys
from os import environ, path

from pydantic import BaseModel
from yaml import safe_load


class Author(BaseModel):
    name: str
    affiliation: str = "1"
    corresponding: bool = False
    email: str = None


pc = environ.get("PAPER_DIR")
if pc is None:
    raise Exception("PAPER_DIR environment variable not set")

bf = pc + "/text/title-block.tex"
if path.exists(bf):
    print(open(bf).read())
    sys.exit(0)

meta = pc + "/text/meta.yaml"
if not path.exists(meta):
    raise Exception("meta.yaml not found")

data = safe_load(open(meta))

title = data["title"]

if subtitle := data.get("subtitle"):
    title += f" \\\\\n\\large\GothamLight {subtitle}"

author = data["author"]

corresponding = None

if not isinstance(author, list):
    author = [author]
print("")
for auth in author:
    if isinstance(auth, str):
        auth = Author(name=auth, affiliation="1")
    else:
        auth = Author(**auth)

    affil = auth.affiliation
    if auth.corresponding and auth.email is not None:
        corresponding = auth.email
        affil += "*"

    print(f"\\author[{affil}]{{{auth.name}}}")

affil = data["affiliation"]
if not isinstance(affil, list):
    affil = [affil]
print("")
for i, aff in enumerate(affil):
    print(f"\\affil[{i+1}]{{{aff}}}")

if corresponding is not None:
    print("")
    print("\\affil[*]{Corresponding author (\\textit{" + corresponding + "})}")
